<template>
  <Tips />
  <view class="container" wx:if="{{init}}">

    <!--照片上传区域-->
    <ImageUploader :pictures.sync="pictures" />

    <!-- 标题区域 -->
    <view class="weui-cells-form">
      <view class="weui-cell">
        <view class="weui-cell__bd">
          <input class="weui-textarea" id="name" value="{{input.name}}" placeholder="请输入商品标题" style="height: 2.3em" maxlength="30" @input="input" />
          <view class="weui-textarea-counter">{{input.name ? input.name.length : 0}}/30</view>
        </view>
      </view>
    </view>

    <!-- SKU 列表 -->
    <SkuList :skuList.sync="skuList" />

    <!-- 其他详细信息 -->
    <view class="detail-box">
      <view class="weui-cells-form">

        <view class="weui-cell"  @tap="showInner">
          <view class="weui-cell__hd">
            <view class="weui-label">商品分类</view>
          </view>
          <view class="weui-cell__bd" >
            {{input.inner ? input.inner : '请选择商品分类'}}
          </view>
          <view class="weui-cell__ft weui-cell__ft_in-access"></view>
        </view>

        <view class="weui-cell"  @tap="select">
          <view class="weui-cell__hd">
            <view class="weui-label">运费</view>
          </view>
          <view class="weui-cell__bd">
            请选择运费模板
          </view>
          <view class="weui-cell__ft weui-cell__ft_in-access"></view>
        </view>

        <view class="weui-cell"  @tap="details">
          <view class="weui-cell__hd">
            <view class="weui-label">商品详情</view>
          </view>
          <view class="weui-cell__bd">
            {{detailText}}
          </view>
          <view class="weui-cell__ft weui-cell__ft_in-access"></view>
        </view>

        <view class="weui-cell weui-cell_switch">
          <view class="weui-cell__bd">立即上架</view>
          <view class="weui-cell__ft">
            <switch checked="{{input.status}}" id="status" @change="input" />
          </view>
        </view>
        <view class="weui-cell weui-cell_switch">
          <view class="weui-cell__bd">推荐商品</view>
          <view class="weui-cell__ft">
            <switch checked="{{input.isRecommend}}" id="isRecommend" @change="input" />
          </view>
        </view>
      </view>
    </view>
    <!--操作栏-->
    <ActionBar @tap.user="submit" />
  </view>

  <!-- 分类 -->
  <SliderPanel :display.sync="isInnerDisplay" btn='false'>
    <view slot="title">商品分类</view>
    <view slot="content" class="weui-cells-form">
      <radio-group id="inner" key="" bindchange="radio" @tap="selectInner">
        <label class="weui-cell weui-check__label" wx:for="{{innerCategories}}" wx:key="value">
          <radio class="weui-check" value="{{item.name}}" checked="{{input.inner == item.name}}"/>
          <view class="weui-cell__bd">{{item.name}}</view>
          <view class="weui-cell__ft weui-cell__ft_in-radio" wx:if="{{input.inner == item.name}}">
            <icon class="weui-icon-radio" type="success_no_circle" size="16"></icon>
          </view>
        </label>
      </radio-group>

      <!-- 新增分类 -->
      <view class="weui-cell weui-cell_input weui-cell_vcode">
        <view class="weui-cell__hd">
          <view class="weui-label"> + 新增分类</view>
        </view>
        <view class="weui-cell__bd">
          <input class="weui-input" id="newInner" @input="input" placeholder="输入分类名称" />
        </view>
        <view class="weui-cell__ft">
          <view class="weui-vcode-btn" @tap="addInner">确定</view>
        </view>
      </view>
    </view>
  </SliderPanel>
</template>

<script>
  import wepy from 'wepy';
  import base from '../../mixins/base';
  import input from '../../mixins/input';
  import goods from '../../api/goods';
  import SkuList from '../../components/goods/sku_list';
  import ImageUploader from '../../components/goods/image_uploader';
  import Tips from '../../utils/Tips';
  import Event from '../../utils/Event';
  import FormTips from '../../components/weui/tips';
  import ActionBar from '../../components/common/action_bar';
  import SliderPanel from '../../components/common/slider_panel';

  export default class GoodsEdit extends wepy.page {
    def = {
      input: {
        status: true
      },
      details: [],
      pictures: [],
      skuList: [{
        sku: '',
        price: '',
        stock: ''
      }],
      mode: 'create',
      innerCategories: [],
      init: false,
      isInnerDisplay: 'false'
    }
    data = {...this.def};
    async onLoad ({goodsId, mode}) {
      this.mode = mode;
      this.innerCategories = await goods.getInnerCategories();
      if (this.mode == 'edit') {
        const detail = await goods.detail(goodsId);
        this.pictures = detail.pictures;
        this.input = detail.input;
        this.details = detail.details;
        this.skuList = detail.skuList;
        this.input.inner = this.innerCategories.find(item => item.id == this.input.innerCid).name
      }
      Event.listen(Event.GOODS_DETAILS_UPDATE, this.detailsUpdate.bind(this), this);
      this.loaded();
    };
    methods = {
      // 提交表单
      async submit() {
        if (!this.validate()) {
          return;
        }
        const data = {
          goodsDetails: [],
          goodsSkuInfo: {},
          goodsStocks: [],
          images: []
        }
        Tips.loading();
        // 处理图片信息
        for (let picture of this.pictures) {
          if (picture.url.substring(0, 6) == 'wxfile') {
            const result = await goods.image(picture.url);
            const image = JSON.parse(result);
            data.images.push(image);
          } else {
            data.images.push(picture);
          }
        }
        // 字段信息
        data.name = this.input.name;
        data.isRecommend = this.input.isRecommend ? 1 : 0;
        data.globalCid = 1; // 待完善
        data.status = this.input.status ? 0 : 1;
        data.innerCid = this.innerCategories.find(item => item.name == this.input.inner).id;
        // 详情信息
        data.goodsDetails = this.details;
        // 处理SKU信息
        const skuList = this.skuList;
        if (skuList.length == 1) {
          // 单个SKU模式
          const sku = skuList[0];
          const stock = {
            sku: null,
            stock: sku.stock
          }
          data.goodsSkuInfo = null;
          data.stock = sku.stock;
          data.goodsStocks.push(stock);
          data.sellPrice = sku.price;
          data.originalPrice = sku.price;
        } else {
          // 多个SKU模式
          data.goodsSkuInfo.goodsSkuDetails = skuList.map(item => {
            const detail = {};
            detail.sku = item.sku;
            const base = {};
            base.imageUrl = data.images[0].url; // 第一张图
            base.price = item.price;
            detail.goodsSkuDetailBase = base;
            return detail;
          });
          data.goodsSkuInfo.prop1 = '规格';
          data.goodsSkuInfo.value1 = skuList.map(item => item.sku).join(',');
          data.goodsStocks = skuList.map(item => {
            return {
              sku: item.sku,
              stock: item.stock
            }
          });
          // 库存求和
          data.stock = skuList.map(item => item.stock).reduce((pre, cur) => parseInt(pre) + parseInt(cur));
          // 售价求最低值
          data.sellPrice = Math.min(...skuList.map(item => item.price));
        }
        if (this.mode == 'create') {
          await goods.create(data);
          await Tips.success('商品新增成功！');
        } else {
          await goods.update(this.input.goodsId, data);
          await Tips.success('商品更新成功！');
        }
        Event.emit(Event.GOODS_LIST_UPDATE);
        wepy.navigateBack();
      },
      // 新增分类
      async addInner() {
        const name = this.input.newInner;
        console.log(name)
        await goods.addInnerCategories(name);
        this.innerCategories = await goods.getInnerCategories();
        this.loaded();
      },
      // 选择分类
      selectInner() {
        this.isInnerDisplay = 'false';
      },
      // 展现分类
      showInner() {
        this.isInnerDisplay = 'true';
      },
      // 跳转到详情页面
      details() {
        const param = {
          details: JSON.stringify(this.details)
        }

        this.$navigate('detail', param);
      }
    };
    // 商品详情更新
    detailsUpdate(details) {
      this.details = details;
    }
    // 检验
    validate() {
      const picturesNum = this.pictures.length;
      const prices = this.skuList.map(item => item.price);
      const stocks = this.skuList.map(item => item.stock);
      let rules = [
        {
          value: picturesNum,
          method: 'min',
          param: 1,
          message: '请上传商品图片'
        },
        {
          value: this.input.name,
          method: 'required',
          message: '请输入商品标题'
        },
        {
          value: this.input.name,
          method: 'minlength',
          param: '2',
          message: '商品标题太短'
        },
        {
          value: prices,
          method: 'required',
          message: '商品价格不能为空'
        },
        {
          value: prices,
          method: 'number',
          message: '商品价格必须为数字'
        },
        {
          value: prices,
          method: 'min',
          param: 0.01,
          message: '商品价格不能为0或负数'
        },
        {
          value: prices,
          method: 'max',
          param: 1000000,
          message: '商品价格过高'
        },
        {
          value: stocks,
          method: 'required',
          message: '商品库存不能为空'
        },
        {
          value: stocks,
          method: 'digits',
          message: '商品库存必须为整数'
        },
        {
          value: stocks,
          method: 'min',
          param: 0,
          message: '商品库存不能为负数'
        },
        {
          value: stocks,
          method: 'max',
          param: 1000000,
          message: '商品库存过高'
        },
        {
          value: this.input.inner,
          method: 'required',
          message: '请选择商品分类'
        }
      ];
      const sku = this.skuList.map(item => item.sku);
      if (sku.length > 1) {
        rules = rules.concat([
          {
            value: sku,
            method: 'required',
            message: '型号不能为空'
          },
          {
            value: sku,
            method: 'minlength',
            param: 1,
            message: '型号名称太短'
          },
          {
            value: sku,
            method: 'maxlength',
            param: 10,
            message: '型号名称太长'
          },
          {
            value: sku,
            method: 'noDuplicate',
            message: '型号名称不能重复'
          }
        ]);
      }
      const result = this.check(rules);
      if (!result) {
        return false;
      }
      // 库存校验
      const empty = stocks.every(item => item == 0);
      if (empty && this.input.status) {
        this.tips('无库存商品不能上架');
        this.input.status = false;
        return false;
      }
      return true;
    }

    computed = {
      detailText() {
        const size = this.details.length;
        return size > 0 ? `已保存${size}条详情` : '请点击编辑详情';
      }
    };
    components = {
      Tips: FormTips,
      ActionBar: ActionBar,
      SkuList: SkuList,
      ImageUploader: ImageUploader,
      SliderPanel: SliderPanel
    };
    mixins = [base, input];
    config = {
      navigationBarTitleText: '编辑商品'
    };
  }
</script>
<style lang="scss">
  @import "../../styles/variable";

  .detail-box{
    border-top: $border;
  }

</style>
