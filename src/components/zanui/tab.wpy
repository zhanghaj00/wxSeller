<template>
  <view class="zan-tab">
    <block wx:if="{{tab.scroll}}">
      <scroll-view
        class="zan-tab__bd zan-tab__bd--scroll {{ fixed ? 'zan-tab__bd--fixed' : '' }}"
        scroll-x="true"
        style="height:{{ tab.height ? tab.height + 'px' : 'auto' }}"
      >
        <view
          wx:for="{{tab.list}}"
          wx:key="id"
          class="zan-tab__item {{tab.selectedId == item.id ? 'zan-tab__item--selected' : ''}}"
          data-component-id="{{componentId}}"
          data-item-id="{{item.id}}"
          @tap="handleZanTabChange"
        >
          <view class="zan-tab__title">
            <text>{{item.title}}</text>
            <block wx:if="{{tab.order}}">
              <image class="icon" src="/images/icons/order-{{tab.sord}}.png" wx:if="{{tab.selectedId == item.id}}"/>
              <image class="icon" src="/images/icons/order-none.png" wx:else/>
            </block>
          </view>
        </view>
      </scroll-view>
    </block>
    <block wx:else>
      <view class="zan-tab__bd {{fixed ? 'zan-tab__bd--fixed' : ''}}">
        <view
          wx:for="{{tab.list}}"
          wx:key="id"
          class="zan-tab__item {{tab.selectedId == item.id ? 'zan-tab__item--selected' : ''}}"
          data-component-id="{{componentId}}"
          data-item-id="{{item.id}}"
          @tap="handleZanTabChange"
        >
          <view class="zan-tab__title">
            <text>{{item.title}}</text>
            <block wx:if="{{tab.order}}">
              <image class="icon" src="/images/icons/order-{{tab.sord}}.png" wx:if="{{tab.selectedId == item.id}}"/>
              <image class="icon" src="/images/icons/order-none.png" wx:else/>
            </block>
          </view>
        </view>
      </view>
    </block>
  </view>
</template>

<script>
  import wepy from 'wepy';
  export default class ZanTab extends wepy.component {
    props = {
      tab: {twoWay: true},
      fixed: {
        type: Boolean,
        default: true
      }
    };
    data = {};
    methods = {
      /**
       * 事件处理函数
       */
      handleZanTabChange(e) {
        const dataset = e.currentTarget.dataset;
        const componentId = dataset.componentId;
        const selectedId = dataset.itemId;
        const data = { componentId, selectedId };
        // 处理排序情况
        if (this.tab.order) {
          const lastId = this.tab.selectedId;
          if (lastId == selectedId) {
            this.tab.sord = this.tab.sord == 'desc' ? 'asc' : 'desc';
          }
          data.sord = this.tab.sord;
        }
        // 直接修改数据/双向通讯
        this.tab.selectedId = selectedId;
        // 发射事件
        this.$emit('change', data);
      }
    };
    events = {};
  }
</script>

<style lang="scss">
  @import "../../styles/variable";
  .zan-tab {
    height: 41px;
  }
  .zan-tab__bd {
    width: 750rpx;
    display: flex;
    flex-direction: row;
    border-bottom: 1rpx solid #e5e5e5;
    background: #fff;
  }
  .zan-tab__bd--fixed {
    position: fixed;
    top: 0;
    z-index: 2;
  }
  .zan-tab__item {
    flex: 1;
    display: inline-block;
    text-align: center;
    box-sizing: border-box;
  }
  .zan-tab__title {
    display: inline-block;
    color: #666;
    height: 40px;
    line-height: 40px;
    box-sizing: border-box;
    margin: 0 10px;
    word-break: keep-all;
  }
  .zan-tab__title text{
    font-size: 28rpx;
  }
  .zan-tab__item--selected .zan-tab__title {
    border-bottom: 2px solid $color-primary;
  }
  .zan-tab__item--selected .zan-tab__title text{
    color: $color-primary;
  }
  .zan-tab__bd--scroll {
    display: block;
    white-space: nowrap;
  }
  .zan-tab__bd--scroll .zan-tab__item {
    min-width: 80px;
  }
  .zan-tab__bd--scroll .zan-tab__text {
    margin: 0 20px;
  }
</style>
